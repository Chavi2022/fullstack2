import React, { useState, useEffect } from 'react';
import { getFilteredPoolInfo } from '../services/api';
import { Pool } from '../types/poolTypes';
import { roundCpu, formatRepaveDate, computeUtilization } from '../utils/poolUtils';
import { tableStyles } from '../styles/styles.css';

const PoolTable: React.FC = () => {
  const [pools, setPools] = useState<Pool[]>([]);
  const [selectedPools, setSelectedPools] = useState<string[]>([]);

  useEffect(() => {
    fetchPools();
  }, []);

  const fetchPools = async () => {
    try {
      const response = await getFilteredPoolInfo();
      setPools(response.data);
    } catch (error) {
      console.error('Error fetching pools:', error);
    }
  };

  const handleCheckboxChange = (poolName: string) => {
    setSelectedPools(prevSelected => 
      prevSelected.includes(poolName)
        ? prevSelected.filter(name => name !== poolName)
        : [...prevSelected, poolName]
    );
  };

  return (
    <div className={tableStyles.container}>
      <table className={tableStyles.table}>
        <thead>
          <tr>
            <th className={tableStyles.th}>Select</th>
            <th className={tableStyles.th}>Region</th>
            <th className={tableStyles.th}>Pool</th>
            <th className={tableStyles.th}>Data Center Type</th>
            <th className={tableStyles.th}>Avg CPU</th>
            <th className={tableStyles.th}>Env</th>
            <th className={tableStyles.th}>Available</th>
            <th className={tableStyles.th}>Max Slice</th>
            <th className={tableStyles.th}>Used</th>
            <th className={tableStyles.th}>Total</th>
            <th className={tableStyles.th}>Next Repave</th>
            <th className={tableStyles.th}>Utilization</th>
          </tr>
        </thead>
        <tbody>
          {pools.map((pool) => (
            <tr key={pool.pool}>
              <td className={tableStyles.td}>
                <div className={tableStyles.checkboxContainer}>
                  <input
                    type="checkbox"
                    checked={selectedPools.includes(pool.pool)}
                    onChange={() => handleCheckboxChange(pool.pool)}
                  />
                </div>
              </td>
              <td className={tableStyles.td}>{pool.region}</td>
              <td className={tableStyles.td}>{pool.pool}</td>
              <td className={tableStyles.td}>{pool.dataCenterType}</td>
              <td className={tableStyles.td}>{roundCpu(pool.avgCpu)}</td>
              <td className={tableStyles.td}>{pool.instances[0].env}</td>
              <td className={tableStyles.td}>{pool.instances[0].capacity.available}</td>
              <td className={tableStyles.td}>{pool.instances[0].capacity.maxSlice}</td>
              <td className={tableStyles.td}>{pool.instances[0].capacity.used}</td>
              <td className={tableStyles.td}>{pool.instances[0].capacity.total}</td>
              <td className={tableStyles.td}>{formatRepaveDate(pool.instances[0].nextRepave)}</td>
              <td className={tableStyles.td}>
                {computeUtilization(pool.instances[0].capacity.available, pool.instances[0].capacity.total)}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default PoolTable;
