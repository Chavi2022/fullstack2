private List<Pool> processResponse(JsonNode regionsNode) {
    List<Pool> filteredPools = new ArrayList<>();
    
    for (JsonNode regionNode : regionsNode) {
        String region = regionNode.get("region").asText();
        
        for (JsonNode poolNode : regionNode.get("pools")) {
            if ("strategic".equals(poolNode.get("dataCenterType").asText())) {
                
                for (JsonNode instanceNode : poolNode.get("instances")) {
                    if ("dev".equals(instanceNode.get("env").asText())) {
                        
                        Pool pool = new Pool();
                        pool.setRegion(region);
                        pool.setPoolName(poolNode.get("pool").asText());
                        pool.setDataCenterType(poolNode.get("dataCenterType").asText());
                        
                        Pool.Instance instance = new Pool.Instance();
                        instance.setEnv(instanceNode.get("env").asText());

                        Pool.Instance.Capacity capacity = new Pool.Instance.Capacity();
                        capacity.setAvailable(instanceNode.get("capacity").get("available").asInt());
                        capacity.setMaxSlice(instanceNode.get("capacity").get("maxSlice").asInt());
                        instance.setCapacity(capacity);

                        List<Pool.Instance> instances = new ArrayList<>();
                        instances.add(instance);
                        pool.setInstances(instances);

                        filteredPools.add(pool);
                    }
                }
            }
        }
    }
    return filteredPools;
}
